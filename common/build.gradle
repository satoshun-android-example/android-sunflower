apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'

kotlin {
  targets {
    fromPreset(presets.jvm, 'jvm')

    // Change to `presets.iosArm64` to deploy the app to iPhone
    fromPreset(presets.iosX64, 'ios') {
      compilations.main.outputKinds('FRAMEWORK')
    }
  }
  sourceSets {
    commonMain {
      dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib'
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"

        implementation "io.ktor:ktor-client-core:$ktor_version"
        implementation "io.ktor:ktor-client-json:$ktor_version"
      }
    }
    commonTest {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-test-common"
        implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
      }
    }
    jvmMain {
      dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

        implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

        implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
        implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
      }
    }
    jvmTest {
      dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-test'
        implementation 'org.jetbrains.kotlin:kotlin-test-junit'
      }
    }
    iosMain {
      dependencies {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"

        implementation "io.ktor:ktor-client-ios:$ktor_version"
        implementation "io.ktor:ktor-client-core-ios:$ktor_version"
        implementation "io.ktor:ktor-client-json-ios:$ktor_version"
      }
    }
  }
}
